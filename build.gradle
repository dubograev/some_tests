buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath group: 'io.qameta.allure', name: 'allure-gradle', version: '2.8.1'
    }
}

plugins {
    id 'java-library'
    id 'application'
    id 'io.qameta.allure' version '2.8.1'
}

group 'some.tests'
version '1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    allureVersion = '2.13.2'
    junitVersion = '5.6.0'
}

repositories {
    jcenter()
    mavenCentral()
}


allure {
    version = "${allureVersion}"
    autoconfigure = true

    useJUnit5 {
        version = "${allureVersion}"
    }
}

dependencies {
    testImplementation 'com.codeborne:selenide:5.11.0'
    testImplementation "io.qameta.allure:allure-selenide:${allureVersion}"
    testImplementation "io.qameta.allure:allure-rest-assured:${allureVersion}"
    testImplementation 'io.rest-assured:rest-assured:4.1.2'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation 'com.fasterxml.jackson.core:jackson-annotations:2.10.3'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties = System.properties
    if (project.hasProperty("web_threads")) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': project.getProperty("web_threads").toInteger()
        ]
    }
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
    allure.resultsDir = file("build/allure-results")
}

task tests(type: Test) {
    useJUnitPlatform {
        includeTags 'ui'
        includeTags 'api'
    }
    systemProperty 'platform', 'web'
}
